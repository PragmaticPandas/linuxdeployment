print by specific line number: eg line 3
$ awk 'NR==3' file.txt

print odd lines:
$cat file.txt | awk NR%2==1

print even lines:
$cat file.txt | awk NR%2==0



you can grep inside of awk:
$awk 'NR % 2 {print} !(NR % 2) {print | "grep pattern | rev" }' file.fasta

prints the numbers 1-20:
$seq 20

cat with awk:
$filename | awk '{print $0}'

print the first or second line of stout:
seq 20 | awk '{print $1}'
seq 20 | awk '{print $2}'

field separator:
$ awk -F ":" '{print $1}' /etc/passwd

print multiple lines of stout:
$ awk -F ":" '{print $1 $6 $7}' /etc/passwd

print with spaces in between the columns:
$ awk -F ":" '{print $1" " $6" " $7}' /etc/passwd

print with tabs 
$ awk -F ":" '{print $1"\t" $6"\t" $7}' /etc/passwd

replace a field separator with the OFS value:
$ awk 'BEGIN{FS=":"; OFS="-" {print $0}}' filename

search patterns:
$ awk -F "/" '/^-.- /'

$ awk -F "/" '/^\//' /etc/shells | uniq | sort

print the first, second, and third columns of entries
 that start with /dev/loop, separated by tab space:
$ df | awk '/\/dev\/loop {print $1"\t"$2"\t"$3}'

print entries that are longer than 7 chars:
$ awk 'length($0) > 7' /etc/shells

if statements:
$ ps -ef | awk '{if ($NF == "/bin/sh") print $0}'

simple math:
$ awk 'BEGIN {for (i=1; i<=10; i++) print "The square root of", i, "is", i*i;}'
 
print lines starting with either "b" or "c":
$ awk '$1 ~ /^[b,c]/ {print $0}' .bashrc

functions, print each line after char 4:
$ awk '{print substr($0,4)}' filename.txt

print the lines that match the letter "o"
$ awk 'match($0, /o/) {print $0 " has \"o\" character at " RSTART}'

NR stands for number of records:
$ df | awk 'NR==7, NR==11 {print NR, $0}'

wc function:
$ awk 'END {print NR}' /etc/shells

you can add multiple files to awk









